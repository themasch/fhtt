<?php

namespace fhtt\proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class fhttentitiesEventProxy extends \fhtt\entities\Event implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setGroupDef($groupDef)
    {
        $this->__load();
        return parent::setGroupDef($groupDef);
    }

    public function getGroupDef()
    {
        $this->__load();
        return parent::getGroupDef();
    }

    public function setDay($day)
    {
        $this->__load();
        return parent::setDay($day);
    }

    public function getDay()
    {
        $this->__load();
        return parent::getDay();
    }

    public function setStartTime($startTime)
    {
        $this->__load();
        return parent::setStartTime($startTime);
    }

    public function getStartTime()
    {
        $this->__load();
        return parent::getStartTime();
    }

    public function setDuration($duration)
    {
        $this->__load();
        return parent::setDuration($duration);
    }

    public function getDuration()
    {
        $this->__load();
        return parent::getDuration();
    }

    public function setType(\fhtt\entities\Type $type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setHost(\fhtt\entities\Host $host)
    {
        $this->__load();
        return parent::setHost($host);
    }

    public function getHost()
    {
        $this->__load();
        return parent::getHost();
    }

    public function setModule(\fhtt\entities\Module $module)
    {
        $this->__load();
        return parent::setModule($module);
    }

    public function getModule()
    {
        $this->__load();
        return parent::getModule();
    }

    public function setRoom(\fhtt\entities\Room $room)
    {
        $this->__load();
        return parent::setRoom($room);
    }

    public function getRoom()
    {
        $this->__load();
        return parent::getRoom();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'groupDef', 'day', 'start_time', 'duration', 'type', 'host', 'module', 'room');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}